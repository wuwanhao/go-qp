// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: user.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account       string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password      string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	LoginPlatform int32  `protobuf:"varint,3,opt,name=loginPlatform,proto3" json:"loginPlatform,omitempty"`
	SmsCode       string `protobuf:"bytes,4,opt,name=smsCode,proto3" json:"smsCode,omitempty"`
}

func (x *RegisterParams) Reset() {
	*x = RegisterParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterParams) ProtoMessage() {}

func (x *RegisterParams) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterParams.ProtoReflect.Descriptor instead.
func (*RegisterParams) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterParams) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *RegisterParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterParams) GetLoginPlatform() int32 {
	if x != nil {
		return x.LoginPlatform
	}
	return 0
}

func (x *RegisterParams) GetSmsCode() string {
	if x != nil {
		return x.SmsCode
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type UserParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *UserParams) Reset() {
	*x = UserParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserParams) ProtoMessage() {}

func (x *UserParams) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserParams.ProtoReflect.Descriptor instead.
func (*UserParams) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2}
}

func (x *UserParams) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type UserDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid              string       `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	NickName         string       `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Avatar           string       `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	AvatarFrame      string       `protobuf:"bytes,4,opt,name=avatarFrame,proto3" json:"avatarFrame,omitempty"`
	Sex              int32        `protobuf:"varint,5,opt,name=sex,proto3" json:"sex,omitempty"`
	Gold             int64        `protobuf:"varint,6,opt,name=gold,proto3" json:"gold,omitempty"`
	EmailArr         string       `protobuf:"bytes,7,opt,name=emailArr,proto3" json:"emailArr,omitempty"`
	MobilePhone      string       `protobuf:"bytes,8,opt,name=mobilePhone,proto3" json:"mobilePhone,omitempty"`
	RealName         string       `protobuf:"bytes,9,opt,name=realName,proto3" json:"realName,omitempty"`
	IsAgent          bool         `protobuf:"varint,10,opt,name=isAgent,proto3" json:"isAgent,omitempty"`
	RoomID           string       `protobuf:"bytes,11,opt,name=roomID,proto3" json:"roomID,omitempty"`
	FrontendId       string       `protobuf:"bytes,12,opt,name=frontendId,proto3" json:"frontendId,omitempty"`
	Address          string       `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`
	Location         string       `protobuf:"bytes,14,opt,name=location,proto3" json:"location,omitempty"`
	IsBlockedAccount int32        `protobuf:"varint,15,opt,name=isBlockedAccount,proto3" json:"isBlockedAccount,omitempty"`
	LastLoginIP      string       `protobuf:"bytes,16,opt,name=lastLoginIP,proto3" json:"lastLoginIP,omitempty"`
	LastLoginTime    int64        `protobuf:"varint,17,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	CreateTime       int64        `protobuf:"varint,18,opt,name=createTime,proto3" json:"createTime,omitempty"`
	InviteMsg        []*InviteMsg `protobuf:"bytes,19,rep,name=inviteMsg,proto3" json:"inviteMsg,omitempty"`
}

func (x *UserDTO) Reset() {
	*x = UserDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDTO) ProtoMessage() {}

func (x *UserDTO) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDTO.ProtoReflect.Descriptor instead.
func (*UserDTO) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{3}
}

func (x *UserDTO) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UserDTO) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserDTO) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserDTO) GetAvatarFrame() string {
	if x != nil {
		return x.AvatarFrame
	}
	return ""
}

func (x *UserDTO) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UserDTO) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *UserDTO) GetEmailArr() string {
	if x != nil {
		return x.EmailArr
	}
	return ""
}

func (x *UserDTO) GetMobilePhone() string {
	if x != nil {
		return x.MobilePhone
	}
	return ""
}

func (x *UserDTO) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *UserDTO) GetIsAgent() bool {
	if x != nil {
		return x.IsAgent
	}
	return false
}

func (x *UserDTO) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *UserDTO) GetFrontendId() string {
	if x != nil {
		return x.FrontendId
	}
	return ""
}

func (x *UserDTO) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserDTO) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *UserDTO) GetIsBlockedAccount() int32 {
	if x != nil {
		return x.IsBlockedAccount
	}
	return 0
}

func (x *UserDTO) GetLastLoginIP() string {
	if x != nil {
		return x.LastLoginIP
	}
	return ""
}

func (x *UserDTO) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *UserDTO) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *UserDTO) GetInviteMsg() []*InviteMsg {
	if x != nil {
		return x.InviteMsg
	}
	return nil
}

type InviteMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	UnionID   int64  `protobuf:"varint,3,opt,name=unionID,proto3" json:"unionID,omitempty"`
	Partner   bool   `protobuf:"varint,4,opt,name=partner,proto3" json:"partner,omitempty"`
	UnionName string `protobuf:"bytes,5,opt,name=unionName,proto3" json:"unionName,omitempty"`
}

func (x *InviteMsg) Reset() {
	*x = InviteMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteMsg) ProtoMessage() {}

func (x *InviteMsg) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteMsg.ProtoReflect.Descriptor instead.
func (*InviteMsg) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{4}
}

func (x *InviteMsg) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *InviteMsg) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *InviteMsg) GetUnionID() int64 {
	if x != nil {
		return x.UnionID
	}
	return 0
}

func (x *InviteMsg) GetPartner() bool {
	if x != nil {
		return x.Partner
	}
	return false
}

func (x *InviteMsg) GetUnionName() string {
	if x != nil {
		return x.UnionName
	}
	return ""
}

type UnionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteID                  int64  `protobuf:"varint,1,opt,name=inviteID,proto3" json:"inviteID,omitempty"`
	UnionID                   int64  `protobuf:"varint,2,opt,name=unionID,proto3" json:"unionID,omitempty"`
	SpreaderID                string `protobuf:"bytes,3,opt,name=spreaderID,proto3" json:"spreaderID,omitempty"`
	Score                     int64  `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
	SafeScore                 int64  `protobuf:"varint,5,opt,name=safeScore,proto3" json:"safeScore,omitempty"`
	Partner                   bool   `protobuf:"varint,6,opt,name=partner,proto3" json:"partner,omitempty"`
	RebateRate                int64  `protobuf:"varint,7,opt,name=rebateRate,proto3" json:"rebateRate,omitempty"`
	TodayDraw                 int64  `protobuf:"varint,8,opt,name=todayDraw,proto3" json:"todayDraw,omitempty"`
	YesterdayDraw             int64  `protobuf:"varint,9,opt,name=yesterdayDraw,proto3" json:"yesterdayDraw,omitempty"`
	TotalDraw                 int64  `protobuf:"varint,10,opt,name=totalDraw,proto3" json:"totalDraw,omitempty"`
	WeekDraw                  int64  `protobuf:"varint,11,opt,name=weekDraw,proto3" json:"weekDraw,omitempty"`
	MemberTodayDraw           int64  `protobuf:"varint,12,opt,name=memberTodayDraw,proto3" json:"memberTodayDraw,omitempty"`
	MemberYesterdayDraw       int64  `protobuf:"varint,13,opt,name=memberYesterdayDraw,proto3" json:"memberYesterdayDraw,omitempty"`
	TodayBigWinDraw           int64  `protobuf:"varint,14,opt,name=todayBigWinDraw,proto3" json:"todayBigWinDraw,omitempty"`
	YesterdayBigWinDraw       int64  `protobuf:"varint,15,opt,name=yesterdayBigWinDraw,proto3" json:"yesterdayBigWinDraw,omitempty"`
	MemberTodayBigWinDraw     int64  `protobuf:"varint,16,opt,name=memberTodayBigWinDraw,proto3" json:"memberTodayBigWinDraw,omitempty"`
	MemberYesterdayBigWinDraw int64  `protobuf:"varint,17,opt,name=memberYesterdayBigWinDraw,proto3" json:"memberYesterdayBigWinDraw,omitempty"`
	TodayProvideRebate        int64  `protobuf:"varint,18,opt,name=todayProvideRebate,proto3" json:"todayProvideRebate,omitempty"`
	YesterdayProvideRebate    int64  `protobuf:"varint,19,opt,name=yesterdayProvideRebate,proto3" json:"yesterdayProvideRebate,omitempty"`
	TodayRebate               int64  `protobuf:"varint,20,opt,name=todayRebate,proto3" json:"todayRebate,omitempty"`
	YesterdayRebate           int64  `protobuf:"varint,21,opt,name=yesterdayRebate,proto3" json:"yesterdayRebate,omitempty"`
	TotalRebate               int64  `protobuf:"varint,22,opt,name=totalRebate,proto3" json:"totalRebate,omitempty"`
	TodayWin                  int64  `protobuf:"varint,23,opt,name=todayWin,proto3" json:"todayWin,omitempty"`
	YesterdayWin              int64  `protobuf:"varint,24,opt,name=yesterdayWin,proto3" json:"yesterdayWin,omitempty"`
	ProhibitGame              int64  `protobuf:"varint,25,opt,name=prohibitGame,proto3" json:"prohibitGame,omitempty"`
	JoinTime                  int64  `protobuf:"varint,26,opt,name=joinTime,proto3" json:"joinTime,omitempty"`
}

func (x *UnionInfo) Reset() {
	*x = UnionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionInfo) ProtoMessage() {}

func (x *UnionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionInfo.ProtoReflect.Descriptor instead.
func (*UnionInfo) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{5}
}

func (x *UnionInfo) GetInviteID() int64 {
	if x != nil {
		return x.InviteID
	}
	return 0
}

func (x *UnionInfo) GetUnionID() int64 {
	if x != nil {
		return x.UnionID
	}
	return 0
}

func (x *UnionInfo) GetSpreaderID() string {
	if x != nil {
		return x.SpreaderID
	}
	return ""
}

func (x *UnionInfo) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *UnionInfo) GetSafeScore() int64 {
	if x != nil {
		return x.SafeScore
	}
	return 0
}

func (x *UnionInfo) GetPartner() bool {
	if x != nil {
		return x.Partner
	}
	return false
}

func (x *UnionInfo) GetRebateRate() int64 {
	if x != nil {
		return x.RebateRate
	}
	return 0
}

func (x *UnionInfo) GetTodayDraw() int64 {
	if x != nil {
		return x.TodayDraw
	}
	return 0
}

func (x *UnionInfo) GetYesterdayDraw() int64 {
	if x != nil {
		return x.YesterdayDraw
	}
	return 0
}

func (x *UnionInfo) GetTotalDraw() int64 {
	if x != nil {
		return x.TotalDraw
	}
	return 0
}

func (x *UnionInfo) GetWeekDraw() int64 {
	if x != nil {
		return x.WeekDraw
	}
	return 0
}

func (x *UnionInfo) GetMemberTodayDraw() int64 {
	if x != nil {
		return x.MemberTodayDraw
	}
	return 0
}

func (x *UnionInfo) GetMemberYesterdayDraw() int64 {
	if x != nil {
		return x.MemberYesterdayDraw
	}
	return 0
}

func (x *UnionInfo) GetTodayBigWinDraw() int64 {
	if x != nil {
		return x.TodayBigWinDraw
	}
	return 0
}

func (x *UnionInfo) GetYesterdayBigWinDraw() int64 {
	if x != nil {
		return x.YesterdayBigWinDraw
	}
	return 0
}

func (x *UnionInfo) GetMemberTodayBigWinDraw() int64 {
	if x != nil {
		return x.MemberTodayBigWinDraw
	}
	return 0
}

func (x *UnionInfo) GetMemberYesterdayBigWinDraw() int64 {
	if x != nil {
		return x.MemberYesterdayBigWinDraw
	}
	return 0
}

func (x *UnionInfo) GetTodayProvideRebate() int64 {
	if x != nil {
		return x.TodayProvideRebate
	}
	return 0
}

func (x *UnionInfo) GetYesterdayProvideRebate() int64 {
	if x != nil {
		return x.YesterdayProvideRebate
	}
	return 0
}

func (x *UnionInfo) GetTodayRebate() int64 {
	if x != nil {
		return x.TodayRebate
	}
	return 0
}

func (x *UnionInfo) GetYesterdayRebate() int64 {
	if x != nil {
		return x.YesterdayRebate
	}
	return 0
}

func (x *UnionInfo) GetTotalRebate() int64 {
	if x != nil {
		return x.TotalRebate
	}
	return 0
}

func (x *UnionInfo) GetTodayWin() int64 {
	if x != nil {
		return x.TodayWin
	}
	return 0
}

func (x *UnionInfo) GetYesterdayWin() int64 {
	if x != nil {
		return x.YesterdayWin
	}
	return 0
}

func (x *UnionInfo) GetProhibitGame() int64 {
	if x != nil {
		return x.ProhibitGame
	}
	return 0
}

func (x *UnionInfo) GetJoinTime() int64 {
	if x != nil {
		return x.JoinTime
	}
	return 0
}

var File_user_proto protoreflect.FileDescriptor

var file_user_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x01, 0x0a,
	0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6d,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x24, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x0a, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xb7, 0x04, 0x0a, 0x07,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x54, 0x4f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65,
	0x78, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x67, 0x6f, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x72,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x72,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x73, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x69, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x49, 0x50, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x49, 0x50, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x4d, 0x73, 0x67, 0x22, 0x8b, 0x01, 0x0a, 0x09, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xcf, 0x07, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x70, 0x72, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x70, 0x72,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x61, 0x66, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x61, 0x66, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x62, 0x61, 0x74, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x62, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x44, 0x72,
	0x61, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x44,
	0x72, 0x61, 0x77, 0x12, 0x24, 0x0a, 0x0d, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79,
	0x44, 0x72, 0x61, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x79, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x64, 0x61, 0x79, 0x44, 0x72, 0x61, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x44, 0x72, 0x61, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x44, 0x72, 0x61, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x65, 0x65, 0x6b, 0x44,
	0x72, 0x61, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x65, 0x65, 0x6b, 0x44,
	0x72, 0x61, 0x77, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x64,
	0x61, 0x79, 0x44, 0x72, 0x61, 0x77, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x44, 0x72, 0x61, 0x77, 0x12, 0x30, 0x0a,
	0x13, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x59, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79,
	0x44, 0x72, 0x61, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x59, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x44, 0x72, 0x61, 0x77, 0x12,
	0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x42, 0x69, 0x67, 0x57, 0x69, 0x6e, 0x44, 0x72,
	0x61, 0x77, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x42,
	0x69, 0x67, 0x57, 0x69, 0x6e, 0x44, 0x72, 0x61, 0x77, 0x12, 0x30, 0x0a, 0x13, 0x79, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x42, 0x69, 0x67, 0x57, 0x69, 0x6e, 0x44, 0x72, 0x61, 0x77,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61,
	0x79, 0x42, 0x69, 0x67, 0x57, 0x69, 0x6e, 0x44, 0x72, 0x61, 0x77, 0x12, 0x34, 0x0a, 0x15, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x42, 0x69, 0x67, 0x57, 0x69, 0x6e,
	0x44, 0x72, 0x61, 0x77, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x42, 0x69, 0x67, 0x57, 0x69, 0x6e, 0x44, 0x72, 0x61,
	0x77, 0x12, 0x3c, 0x0a, 0x19, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x59, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x64, 0x61, 0x79, 0x42, 0x69, 0x67, 0x57, 0x69, 0x6e, 0x44, 0x72, 0x61, 0x77, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x59, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x64, 0x61, 0x79, 0x42, 0x69, 0x67, 0x57, 0x69, 0x6e, 0x44, 0x72, 0x61, 0x77, 0x12,
	0x2e, 0x0a, 0x12, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x62, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x74, 0x6f, 0x64,
	0x61, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x12,
	0x36, 0x0a, 0x16, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x16, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x64, 0x61, 0x79,
	0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x79, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x52, 0x65, 0x62,
	0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x62, 0x61,
	0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52,
	0x65, 0x62, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x57, 0x69,
	0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x57, 0x69,
	0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x57, 0x69,
	0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64,
	0x61, 0x79, 0x57, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x68, 0x69, 0x62, 0x69,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x68, 0x69, 0x62, 0x69, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x6f, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6a, 0x6f, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x65, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x0f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x11, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x55, 0x69, 0x64, 0x12, 0x0b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x08, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x54, 0x4f, 0x42, 0x0c, 0x5a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_user_proto_rawDescOnce sync.Once
	file_user_proto_rawDescData = file_user_proto_rawDesc
)

func file_user_proto_rawDescGZIP() []byte {
	file_user_proto_rawDescOnce.Do(func() {
		file_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_proto_rawDescData)
	})
	return file_user_proto_rawDescData
}

var file_user_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_user_proto_goTypes = []interface{}{
	(*RegisterParams)(nil),   // 0: RegisterParams
	(*RegisterResponse)(nil), // 1: RegisterResponse
	(*UserParams)(nil),       // 2: UserParams
	(*UserDTO)(nil),          // 3: UserDTO
	(*InviteMsg)(nil),        // 4: InviteMsg
	(*UnionInfo)(nil),        // 5: UnionInfo
}
var file_user_proto_depIdxs = []int32{
	4, // 0: UserDTO.inviteMsg:type_name -> InviteMsg
	0, // 1: UserService.Register:input_type -> RegisterParams
	2, // 2: UserService.FindUserByUid:input_type -> UserParams
	1, // 3: UserService.Register:output_type -> RegisterResponse
	3, // 4: UserService.FindUserByUid:output_type -> UserDTO
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_user_proto_init() }
func file_user_proto_init() {
	if File_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_proto_goTypes,
		DependencyIndexes: file_user_proto_depIdxs,
		MessageInfos:      file_user_proto_msgTypes,
	}.Build()
	File_user_proto = out.File
	file_user_proto_rawDesc = nil
	file_user_proto_goTypes = nil
	file_user_proto_depIdxs = nil
}
